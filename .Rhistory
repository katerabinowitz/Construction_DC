spendPerMaxOcc=mean(spendPerMaxOcc, na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
View(wardAllComb)
test<-subset(schoolMod,schoolMod$Ward==6 & schoolMod$Level=="CLOSED")
View(test)
table(test$SpentPerSqFt)
wardAllComb<-ldply(all.combs, function(y) ddply(flippedSchoolModWard,y,summarise,
spendPerSqFt=mean(spendPerSqFt, na.rm=TRUE),
spendPerMaxOcc=mean(spendPerMaxOcc, na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
test<-subset(wardAllCombo,wardAllCombo$SpendPerMaxOcc==NaN)
test<-subset(wardAllComb,wardAllComb$SpendPerMaxOcc==NaN)
View(test)
test<-subset(wardAllComb,wardAllComb$SpendPerMaxOcc==NA)
test<-subset(wardAllComb,is.NaN(wardAllComb$SpendPerMaxOcc))
test<-subset(wardAllComb,is.NA(wardAllComb$SpendPerMaxOcc))
test<-subset(wardAllComb,is.na(wardAllComb$SpendPerMaxOcc))
test<-subset(wardAllComb,is.na(wardAllComb$spendPerMaxOcc))
View(test)
wardAllComb<-ldply(all.combs, function(y) ddply(flippedSchoolModWard,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
View(wardAllComb)
wardAllComb$totalSpend<-round(wardAllComb$totalSpend,0)
wardAllComb$spendPerMaxOcc<-round(wardAllComb$spendPerMaxOcc,2)
wardAllComb$spendPerSqFt<-round(wardAllComb$spendPerSqFt,2)
View(wardAllComb)
flippedSchoolModFeeder<-merge(schoolModSum[c(1,2,4,6,13)],flippedSpend,by="School")
all.combsF <- unlist(lapply(0:5,combn,x=c("Agency","FeederHS","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
feedAllComb<-ldply(all.combsF, function(y) ddply(flippedSchoolModFeeder,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
feedAllComb$totalSpend<-round(feedAllComb$totalSpend,0)
feedAllComb$spendPerMaxOcc<-round(feedAllComb$spendPerMaxOcc,2)
feedAllComb$spendPerSqFt<-round(feedAllComb$spendPerSqFt,2)
View(feedAllComb)
wardPlanSum<-aggregate(list(plan = schoolMod$TotalAllotandPlan1621), by=list(Ward=schoolMod$Ward,Agency=schoolMod$Agency),
FUN=sum, na.rm=TRUE)
wardLifeSum<-aggregate(list(lifetime =schoolMod$LifetimeBudget), by=list(Ward=schoolMod$Ward,Agency=schoolMod$Agency),
FUN=sum, na.rm=TRUE)
wardHistSum<-aggregate(list(past=schoolMod$MajorExp9815), by=list(Ward=schoolMod$Ward,Agency=schoolMod$Agency),
FUN=sum, na.rm=TRUE)
WardSum<-cbind(wardPlanSum,wardLifeSum,wardHistSum)[c(1:3,6,9)]
rm(wardPlanSum,wardLifeSum,wardHistSum)
View(WardSum)
View(wardAllComb)
FeederHSPlanStudent<-aggregate(list(plan = schoolMod$TotalAllotandPlan1621perMaxOcc), by=list(FeederHS=schoolMod$FeederHS,Agency=schoolMod$Agency),
FUN=mean, na.rm=TRUE)
FeederHSLifeStudent<-aggregate(list(lifetime =schoolMod$LifetimeBudgetperMaxOcc), by=list(FeederHS=schoolMod$FeederHS,Agency=schoolMod$Agency),
FUN=mean, na.rm=TRUE)
FeederHSHistStudent<-aggregate(list(past=schoolMod$SpentPerMaxOccupancy), by=list(FeederHS=schoolMod$FeederHS,Agency=schoolMod$Agency),
FUN=mean, na.rm=TRUE)
FeederStudent<-cbind(FeederHSPlanStudent,FeederHSLifeStudent,FeederHSHistStudent)[c(1:3,6,9)]
rm(FeederHSPlanStudent,FeederHSLifeStudent,FeederHSHistStudent)
View(FeederStudent)
View(feedAllComb)
library(rjson)
feederCombinations <- toJSON(unname(split(feedAllComb, 1:nrow(feedAllComb))))
feederCombinations
cat(feederCombinations)
feedAllComb<-feedAllComb[-c(1)]
View(feedAllComb)
feederCombinations <- toJSON(unname(split(feedAllComb, 1:nrow(feedAllComb))))
cat(feederCombinations)
library(jsonlite)
feederCombinations <- toJSON(feedAllComb)
cat(feederCombinations)
library(RJSONIO)
write(feederCombinations,
"/Users/katerabinowitz/Documents/CodeforDC/school-modernization/Output Data/FeederCombinations.json")
library(jsonlite)
wardCombinations <- toJSON(wardAllComb)
cat(wardCombinations)
wardCombinations <- toJSON(wardAllComb)
cat(wardCombinations)
library(jsonlite)
library(reshape)
library(plyr)
library(jsonlite)
schoolMod<-read.csv("https://raw.githubusercontent.com/codefordc/school-modernization/master/Output%20Data/DCSchools_FY1415_Master_412.csv",
stringsAsFactors=FALSE, strip.white=TRUE)
str(flippedSchoolModWard)
colnames(schoolMod)
schoolModSum<-schoolMod[c(1,4,5,7,9,10,12,15,26:29,31,34:35)]
colnames(schoolModSum)
schoolModSpend<-schoolModSum[c(1,5,7:12,14:15)]
colnames(schoolModSpend)
flip1 <- reshape(schoolModSpend [c(1:4)],
varying = c("MajorExp9815", "TotalAllotandPlan1621", "LifetimeBudget"),
v.names = "totalSpend",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip2 <- reshape(schoolModSpend[c(1,5,8,10)],
varying = c("SpentPerMaxOccupancy", "TotalAllotandPlan1621perMaxOcc", "LifetimeBudgetperMaxOcc"),
v.names = "spendPerMaxOcc",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip12<-merge(flip1,flip2,by=c("School","timePeriod"))
flip3 <- reshape(schoolModSpend[c(1,6,7,9)],
varying = c("SpentPerSqFt", "TotalAllotandPlan1621perGSF", "LifetimeBudgetperGSF"),
v.names = "spendPerSqFt",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flippedSpend<-merge(flip12, flip3,by=c("School","timePeriod"))[c(1:3,5,7)]
flippedSchoolModWard<-merge(schoolModSum[c(1:4,6)],flippedSpend,by="School")
all.combs <- unlist(lapply(0:5,combn,x=c("Agency","Ward","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
wardAllComb<-ldply(all.combs, function(y) ddply(flippedSchoolModWard,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
wardAllComb$totalSpend<-round(wardAllComb$totalSpend,0)
wardAllComb$spendPerMaxOcc<-round(wardAllComb$spendPerMaxOcc,2)
wardAllComb$spendPerSqFt<-round(wardAllComb$spendPerSqFt,2)
wardAllComb<-wardAllComb[-c(1)]
flippedSchoolModFeeder<-merge(schoolModSum[c(1,2,4,6,13)],flippedSpend,by="School")
all.combsF <- unlist(lapply(0:5,combn,x=c("Agency","FeederHS","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
feedAllComb<-ldply(all.combsF, function(y) ddply(flippedSchoolModFeeder,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
feedAllComb$totalSpend<-round(feedAllComb$totalSpend,0)
feedAllComb$spendPerMaxOcc<-round(feedAllComb$spendPerMaxOcc,2)
feedAllComb$spendPerSqFt<-round(feedAllComb$spendPerSqFt,2)
feedAllComb<-feedAllComb[-c(1)]
feederCombinations <- toJSON(feedAllComb)
cat(feederCombinations)
View(feedAllComb)
feederCombinations <- toJSON(feedAllComb)
cat(feederCombinations)
feederCombinations <- toJSON(unname(split(feedAllComb, 1:nrow(feedAllComb))))
cat(feederCombinations)
library(rjson)
feederCombinations <- toJSON(unname(split(feedAllComb, 1:nrow(feedAllComb))))
cat(feederCombinations)
wardCombinations <- toJSON(unname(split(wardAllComb, 1:nrow(wardAllComb))))
cat(wardCombinations)
library(RJSONIO)
write(feederCombinations,
"/Users/katerabinowitz/Documents/CodeforDC/school-modernization/Output Data/FeederCombinations.json")
View(feedAllComb)
write(wardCombinations,
"/Users/katerabinowitz/Documents/CodeforDC/school-modernization/Output Data/WardCombinations.json")
feederCombinations <- toJSON(unname(split(feedAllComb, 1:nrow(feedAllComb))))
cat(feederCombinations)
feederCombinations<-toJSON(feedAllComb)
cat(feederCombinations)
library(reshape)
library(plyr)
library(jsonlite)
schoolMod<-read.csv("https://raw.githubusercontent.com/codefordc/school-modernization/master/Output%20Data/DCSchools_FY1415_Master_412.csv",
stringsAsFactors=FALSE, strip.white=TRUE)
str(flippedSchoolModWard)
colnames(schoolMod)
schoolModSum<-schoolMod[c(1,4,5,7,9,10,12,15,26:29,31,34:35)]
colnames(schoolModSum)
schoolModSpend<-schoolModSum[c(1,5,7:12,14:15)]
colnames(schoolModSpend)
flip1 <- reshape(schoolModSpend [c(1:4)],
varying = c("MajorExp9815", "TotalAllotandPlan1621", "LifetimeBudget"),
v.names = "totalSpend",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip2 <- reshape(schoolModSpend[c(1,5,8,10)],
varying = c("SpentPerMaxOccupancy", "TotalAllotandPlan1621perMaxOcc", "LifetimeBudgetperMaxOcc"),
v.names = "spendPerMaxOcc",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip12<-merge(flip1,flip2,by=c("School","timePeriod"))
flip3 <- reshape(schoolModSpend[c(1,6,7,9)],
varying = c("SpentPerSqFt", "TotalAllotandPlan1621perGSF", "LifetimeBudgetperGSF"),
v.names = "spendPerSqFt",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flippedSpend<-merge(flip12, flip3,by=c("School","timePeriod"))[c(1:3,5,7)]
flippedSchoolModWard<-merge(schoolModSum[c(1:4,6)],flippedSpend,by="School")
all.combs <- unlist(lapply(0:5,combn,x=c("Agency","Ward","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
wardAllComb<-ldply(all.combs, function(y) ddply(flippedSchoolModWard,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
wardAllComb$totalSpend<-round(wardAllComb$totalSpend,0)
wardAllComb$spendPerMaxOcc<-round(wardAllComb$spendPerMaxOcc,2)
wardAllComb$spendPerSqFt<-round(wardAllComb$spendPerSqFt,2)
wardAllComb<-wardAllComb[-c(1)]
flippedSchoolModFeeder<-merge(schoolModSum[c(1,2,4,6,13)],flippedSpend,by="School")
all.combsF <- unlist(lapply(0:5,combn,x=c("Agency","FeederHS","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
feedAllComb<-ldply(all.combsF, function(y) ddply(flippedSchoolModFeeder,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
feedAllComb$totalSpend<-round(feedAllComb$totalSpend,0)
feedAllComb$spendPerMaxOcc<-round(feedAllComb$spendPerMaxOcc,2)
feedAllComb$spendPerSqFt<-round(feedAllComb$spendPerSqFt,2)
feedAllComb<-feedAllComb[-c(1)]
feederCombinations <- toJSON(feedAllComb)
library(reshape)
library(plyr)
library(jsonlite)
schoolMod<-read.csv("https://raw.githubusercontent.com/codefordc/school-modernization/master/Output%20Data/DCSchools_FY1415_Master_412.csv",
stringsAsFactors=FALSE, strip.white=TRUE)
str(flippedSchoolModWard)
colnames(schoolMod)
schoolModSum<-schoolMod[c(1,4,5,7,9,10,12,15,26:29,31,34:35)]
colnames(schoolModSum)
schoolModSpend<-schoolModSum[c(1,5,7:12,14:15)]
colnames(schoolModSpend)
flip1 <- reshape(schoolModSpend [c(1:4)],
varying = c("MajorExp9815", "TotalAllotandPlan1621", "LifetimeBudget"),
v.names = "totalSpend",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip2 <- reshape(schoolModSpend[c(1,5,8,10)],
varying = c("SpentPerMaxOccupancy", "TotalAllotandPlan1621perMaxOcc", "LifetimeBudgetperMaxOcc"),
v.names = "spendPerMaxOcc",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flip12<-merge(flip1,flip2,by=c("School","timePeriod"))
flip3 <- reshape(schoolModSpend[c(1,6,7,9)],
varying = c("SpentPerSqFt", "TotalAllotandPlan1621perGSF", "LifetimeBudgetperGSF"),
v.names = "spendPerSqFt",
timevar = "timePeriod",
times = c("past","future","lifetime"),
direction = "long")
flippedSpend<-merge(flip12, flip3,by=c("School","timePeriod"))[c(1:3,5,7)]
flippedSchoolModWard<-merge(schoolModSum[c(1:4,6)],flippedSpend,by="School")
all.combs <- unlist(lapply(0:5,combn,x=c("Agency","Ward","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
wardAllComb<-ldply(all.combs, function(y) ddply(flippedSchoolModWard,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
wardAllComb$totalSpend<-round(wardAllComb$totalSpend,0)
wardAllComb$spendPerMaxOcc<-round(wardAllComb$spendPerMaxOcc,2)
wardAllComb$spendPerSqFt<-round(wardAllComb$spendPerSqFt,2)
wardAllComb<-wardAllComb[-c(1)]
flippedSchoolModFeeder<-merge(schoolModSum[c(1,2,4,6,13)],flippedSpend,by="School")
all.combsF <- unlist(lapply(0:5,combn,x=c("Agency","FeederHS","Level","ProjectType","timePeriod"),
simplify=FALSE),recursive=FALSE)
feedAllComb<-ldply(all.combsF, function(y) ddply(flippedSchoolModFeeder,y,summarise,
spendPerSqFt=mean(as.numeric(spendPerSqFt), na.rm=TRUE),
spendPerMaxOcc=mean(as.numeric(spendPerMaxOcc), na.rm=TRUE),
totalSpend=sum(as.numeric(totalSpend), na.rm=TRUE)))
feedAllComb$totalSpend<-round(feedAllComb$totalSpend,0)
feedAllComb$spendPerMaxOcc<-round(feedAllComb$spendPerMaxOcc,2)
feedAllComb$spendPerSqFt<-round(feedAllComb$spendPerSqFt,2)
feedAllComb<-feedAllComb[-c(1)]
feederCombinations <- toJSON(feedAllComb)
cat(feederCombinations)
wardCombinations <- toJSON(wardAllComb)
cat(wardCombinations)
library(RJSONIO)
write(feederCombinations,
"/Users/katerabinowitz/Documents/CodeforDC/school-modernization/Output Data/FeederCombinations.json")
write(wardCombinations,
"/Users/katerabinowitz/Documents/CodeforDC/school-modernization/Output Data/WardCombinations.json")
library(rgdal)
address = readOGR("http://opendata.dc.gov/datasets/aa514416aaf74fdc94748f1e56e7cc8a_0.geojson", "OGRGeoJSON")
mar<-address@data
colnames(mar)
table(mar$RES_TYPE)
marRes<-subset(mar,mar$STATUS=="ACTIVE" & mar$RES_TYPE!="NON RESIDENTIAL" & mar$TYPE_=="ADDRESS")[c(1,15,40,41)]
colnames(marRes)
write.csv(marRes,
"/Users/katerabinowitz/Documents/DataLensDC Org/marRes.csv",
row.names=FALSE)
setwd("/Users/katerabinowitz/Documents/DataLensDC Org")
inspections <- read.csv("inspections.csv", fill = FALSE, strip.white = TRUE)
str(inspections)
inspections$date<-as.Date(inspections$Date, format = "%Y-%m-%d/%d")
str(inspections)
inspections$date<-as.Date(inspections$Date, format = "%Y-%m-%d")
str(inspections)
summary(inspections)
preOp<-subset(inspections,inspection$Inspection.Type=="Preoperational")
preOp<-subset(inspections,inspection$sInspection.Type=="Preoperational")
preOp<-subset(inspections,inspections$Inspection.Type=="Preoperational")
View(preOp)
rest<- read.csv("restaurants.csv", fill = FALSE, strip.white = TRUE)
colnames(preOp)
colnames(rest)
open<-join(preOp,rest,by=Permit.ID, all.x=TRUE)
library(plyr)
colnames(rest)
open<-join(preOp,rest,by=Permit.ID, all.x=TRUE)
open<-join(x=preOp,y=rest,by=Permit.ID, all.x=TRUE)
open<-join(x=preOp,y=rest,by="Permit.ID", all.x=TRUE)
open<-merge(x=preOp,y=rest,by="Permit.ID", all.x=TRUE)
View(open)
summary(open)
abra<-read.csv("tabula-ABCLicenseeList1212015Update_Nightlift.csv",fill = FALSE, strip.white = TRUE)
View(abra)
1399/70
21*75
20*75
colnames(abra)
table(abra$CLASS)
table(abra$DESCRIPTION)
table(abra$STATUS)
subset(abra,abra$TRADE.NAME=="The Good Guys Restaurant")
subset(abra,abra$TRADE.NAME=="LIV Nightclub")
subset(abra,abra$TRADE.NAME=="Echostage")
subset(abra,abra$TRADE.NAME=="Exchange, LTD.")
subset(abra,abra$TRADE.NAME=="Sushi‐ko")
17*75
abraRaw<-read.csv("tabula-ABCLicenseeList1212015Update_Nightlift.csv",fill = FALSE, strip.white = TRUE)
abra<-subset(abraRaw,abraRaw$DESCRIPTION=="DESCRIPTION")
abra<-subset(abraRaw,abraRaw$DESCRIPTION!="DESCRIPTION")
abra<-as.data.frame(sapply(abra,gsub,pattern="\n",replacement=""))
str(abra)
abraRaw<-read.csv("tabula-ABCLicenseeList1212015Update_Nightlift.csv",fill = FALSE,
strip.white = TRUE,stringAsFactors=FALSE)
abraRaw<-read.csv("tabula-ABCLicenseeList1212015Update_Nightlift.csv",fill = FALSE,
strip.white = TRUE,stringsAsFactors=FALSE)
abra<-subset(abraRaw,abraRaw$DESCRIPTION!="DESCRIPTION")
abra<-as.data.frame(sapply(abra,gsub,pattern="\n",replacement=""))
str(abra)
abra<-as.data.frame(sapply(abra,gsub,pattern="\n",replacement=""), stringsAsFactors=FALSE)
str(abra)
abra<-subset(abraRaw,abraRaw$DESCRIPTION!="DESCRIPTION" & abraRaw$STATUS="Active")
abra<-subset(abraRaw,abraRaw$DESCRIPTION!="DESCRIPTION" & abraRaw$STATUS=="Active")
abra<-as.data.frame(sapply(abra,gsub,pattern="\n",replacement=""), stringsAsFactors=FALSE)
str(abra)
View(preOp)
View(marRes)
View(open)
summary(open)
str(abra)
abra$Address<-gsub('[[:punct:]]', '',abra$ADDRESS)
str(abra)
abra$Address<-gsub('  ',' ',abra$Adress)
abra$Address<-gsub('[[:punct:]]','',abra$ADDRESS)
abra$Address<-gsub('  ',' ',abra$Address)
str(abra)
open$Address<-toupper(open$Address)
str(open)
tryMerge<-merge(x=abra,y=open,by='Address',all.x=TRUE)
View(tryMerge)
View(open)
open$Address<-gsub('[[:punct:]]','',open$Address)
open$Address<-toupper(open$Address)
tryMerge<-merge(x=abra,y=open,by='Address',all.x=TRUE)
View(tryMerge)
see<-tryMerge[c("TRADE.NAME","NAME")]
see<-tryMerge[c("TRADE.NAME","NAME"),]
View(see)
see<-subset(tryMerge, colnames(tryMerge)=[c("TRADE.NAME","NAME")]
see<-subset(tryMerge, colnames(tryMerge)==[c("TRADE.NAME","NAME")])
see<-subset(tryMerge, colnames(tryMerge)==c("TRADE.NAME","NAME"))
View(see)
colnames(tryMerge)
see<-tryMerge[c(5,22)]
View(see)
abra<-subset(abra,abra$TRADE.NAME=="DACHA BEER GARDEN")
abraRaw<-read.csv("tabula-ABCLicenseeList1212015Update_Nightlift.csv",fill = FALSE,
strip.white = TRUE,stringsAsFactors=FALSE)
abra<-subset(abraRaw,abraRaw$DESCRIPTION!="DESCRIPTION" & abraRaw$STATUS=="Active")
abra<-as.data.frame(sapply(abra,gsub,pattern="\n",replacement=""), stringsAsFactors=FALSE)
abra$Address<-gsub('[[:punct:]]','',abra$ADDRESS)
abra$Address<-gsub('  ',' ',abra$Address)
open<-open[order(open$Name),]
View(open)
rest<-open[rest(rest$Name),]
rest<-open[order(rest$Name),]
View(rest)
rest<- read.csv("restaurants.csv", fill = FALSE, strip.white = TRUE)
rest<-open[order(rest$Name),]
rest<-rest[order(rest$Name),]
View(rest)
rest<- read.csv("restaurants.csv", fill = FALSE, strip.white = TRUE)
rest<-rest[order(rest$Name),]
View(rest)
subset(inspection, inspection$Permit.ID=="147827")
subset(inspections, inspections$Permit.ID=="147827")
subset(inspections, inspections$Permit.ID=="147827")
inspections<-inspections[order(inspections$Permit.ID),]
View(inspections)
test<-subset(inspections,inspections$Permit.ID>147800)
View(test)
subset(rest, grepl("EAT THE RICH",rest$name))
subset(rest, grepl("EAT",rest$name))
subset(rest, grepl("EAT THE RICH",rest$Name))
View(abra)
subset(abra, grepl("Eat the",abra$TRADE.NAME))
subset(abra, grepl("Eat",abra$TRADE.NAME))
subset(abra, grepl("Eat The Rich",abra$TRADE.NAME))
setwd("/Users/katerabinowitz/Documents/DataLensDC/Construction_DC")
library(rgdal)
library(splitstackshape)
library(plyr)
library(ggmap)
###Read in Data###
###Read in Data###
###Read in Data###
pullPermits<-function(url,year) {
Permit = readOGR(url, "OGRGeoJSON")
PermitDF<-Permit@data
PermitDF$YEAR<-rep(year,nrow(PermitDF))
}
Build16<-pullPermits("http://opendata.dc.gov/datasets/5d14ae7dcd1544878c54e61edda489c3_24.geojson",2016)
colnames(Build16)
pullPermits<-function(url,year) {
Permit = readOGR(url, "OGRGeoJSON")
PermitDF<-Permit@data
PermitDF$YEAR<-rep(year,nrow(PermitDF))
Build<-PermitDF
}
Build16<-pullPermits("http://opendata.dc.gov/datasets/5d14ae7dcd1544878c54e61edda489c3_24.geojson",2016)
colnames(Build16)
table(Build16$PERMIT_TYPE_NAME)
table(Build16$PERMIT_SUBTYPE_NAME)
add<-subset(Build16,Build16$PERMIT_SUBTYPE_NAME=="ADDITION")
View(add)
Build14<-pullPermits("http://opendata.dc.gov/datasets/d4891ca6951947538f6707a6b07ae225_5.geojson",2014)
add<-subset(Build14,Build14$PERMIT_SUBTYPE_NAME=="ADDITION")
View(add)
colnames(Build14)
table(Build14$PERMIT_CATEGORY_NAME)
table(Build14$PERMIT_SUBTYPE_NAME)
build<-subset(Build14,Build14$PERMIT_SUBTYPE_NAME=="BUILDING")
View(build)
table(build$PERMIT_TYPE_NAME)
colnames(Buil16)
colnames(Build16)
table(Build16$PERMIT_APPLICANT)
applicant<-table(Build16$PERMIT_APPLICANT)
applicant<-as.data.frame(table(Build16$PERMIT_APPLICANT))
View(applicant)
table(Build16$PERMIT_SUBTYPE)
new<-subset(Build16,Build16$PERMIT_SUBTYPE=="NEW BUILDING")
applicant<-as.data.frame(table(new$PERMIT_APPLICANT))
applicant<-as.data.frame(table(new$PERMIT_APPLICANT))
View(open)
new<-subset(Build16,Build16$PERMIT_SUBTYPE_NAME=="NEW BUILDING")
View(new)
applicant<-as.data.frame(table(new$PERMIT_APPLICANT))
new$PERMIT_APPLICANT
str(new)
View(new)
View(applicant)
applicant<-applicant[order(applicant$Freq)]
applicant<-applicant[order(applicant$Freq),]
View(applicant)
applicant<-applicant[order(-applicant$Freq),]
View(applicant)
crash = readOGR("http://opendata.dc.gov/datasets/95254fae17bc4792bd47b53f71c2e503_19.geojson", "OGRGeoJSON")
vehCrash<-crash@data
colnames(vehCrash)
colnames(vehCrash)
table(vehCrash$ACCIDENTTYPE)
table(vehCrash$ACCIDENTOCCURED)
colnames(vehCrash)
table(vehCrash$COLLISIONTYPE)
table(vehCrash$NUMVEH_BIKE)
table(vehCrash$IMPAIRMENT)
pedCrash<-subset(vehCrash,grepl("Ped.",vehCrash$COLLISIONTYPE))
View(pedCrash)
inter<-subset(vehCrash,vehCrash$ONSTREET=="At Intersection")
View(inter)
vehCrash$hour<-substr(vehCrash$MILITARYTIME,1,nchar(vehCrash$MILITARYTIME)-3)
table(vehCrash$hour)
vehCrash$hour<-substr(vehCrash$MILITARYTIME,1,nchar(vehCrash$MILITARYTIME)-2)
table(vehCrash$hour)
table(vehCrash$CONSTRUCTION)
construction<-subset(vehCrash,vehCrash$CONSTRUCTION=="Y")
View(construction)
table(vehCrash$IMPAIRMENT)
impaired<-subset(vehCrash,vehCrash$IMPAIRMENT=="Had been drinking and obviously drunk")
View(impaired)
str(vehCrash)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,nchar(vehCrash$MILITARYTIME)-2,nchar(vehCrash$MILITARYTIME))
table(vehCrash$Yr)
vehCrash$ACCIDENTDATE
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,start=nchar(vehCrash$MILITARYTIME)-1)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,start=nchar(vehCrash$MILITARYTIME)-1,0)
table(vehCrash$Yr)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,start=nchar(vehCrash$MILITARYTIME)-1,stop=nchar(vehCrash$MILITARYTIME))
table(vehCrash$Yr)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,-2,-1)
table(vehCrash$Yr)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,nchar(vehCrash$ACCIDENTDATE)-1, nchar(vehCrash$ACCIDENTDATE))
vehCrash<-as.data.frame(crash@data,stringsAsFactors=FALSE)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,nchar(vehCrash$ACCIDENTDATE)-1, nchar(vehCrash$ACCIDENTDATE))
vehCrash<-as.data.frame(crash@data,stringsAsFactors=FALSE)
str(vehCrash)
vehCrash<-as.data.frame(crash@data,stringsAsFactor=FALSE)
str(vehCrash)
vehCrash<-as.data.frame(crash@data,stringsAsFactors =FALSE)
str(vehCrash)
vehCrash<-data.frame(crash@data,stringsAsFactors =FALSE)
str(vehCrash)
vehCrash<-data.frame(crash@data,stringsAsFactors =FALSE)
str(vehCrash)
vehCrash<-data.frame(crash@data)
str(vehCrash)
vehCrash$ACCIDENTDATE<-as.character(vehCrash$ACCIDENTDATE)
vehCrash$Yr<-substr(vehCrash$ACCIDENTDATE,nchar(vehCrash$ACCIDENTDATE)-1, nchar(vehCrash$ACCIDENTDATE))
table(vehCrash$Yr)
